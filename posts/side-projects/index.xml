<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Side Projects on Dennis</title>
    <link>include2md.github.io.git/posts/side-projects/</link>
    <description>Recent content in Side Projects on Dennis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="include2md.github.io.git/posts/side-projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GenGitReport</title>
      <link>include2md.github.io.git/posts/side-projects/gengitreport/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/gengitreport/</guid>
      <description>GenGitReport Notice: Following example and picture is dummy data.(so commit message is informal.)
 Sometimes I need to quickly recall history commit to debug when emergency case. Sometimes I need to create a weekly or monthly report to display what i done.  So I build this tiny tool to help me reach above goal.
 Example:
If I have a dummy commit like following snapshots.  Dummy git commit   Then I can use this interactive tool to quickly filter author, datetime and keyword to find related commits.</description>
    </item>
    
    <item>
      <title>Stock</title>
      <link>include2md.github.io.git/posts/side-projects/stock/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/stock/</guid>
      <description>Stock Years ago, i was interested in Taiwan stock, so I developed this side-project to collect data and display information.
I collect the data from https://mops.twse.com.tw/mops/web/index by using Python and selenium to trigger schedule task. Build Rest API by using Python, Mysql, Django and DRF. Build Front-end part by using Vue.js framework to display stock time series data such us table and chart. i put this project into GCP cloud back then (currently i run out my free quota, so i turn off itâ€¦)</description>
    </item>
    
    <item>
      <title>Lotto</title>
      <link>include2md.github.io.git/posts/side-projects/lotto/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/lotto/</guid>
      <description>Lotto When I am in A10 company as a welfare committee members, I developed this tiny side-project for the lucky draw at year end party. I took 1~2 day to develop it based javascript and three.js library to reach this 3D lotto. Fun of this project is to simulate card game to do shuffle and deal action to reach visual effect display.
 lotto     </description>
    </item>
    
    <item>
      <title>Game Bot - Maze</title>
      <link>include2md.github.io.git/posts/side-projects/game-bot-maze/</link>
      <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/game-bot-maze/</guid>
      <description>Game Bot - Maze Many years ago, I try to write a script to play mobile rpg video game automatically (only for testing).
Maze is a very important element in rpg game. When player try to pass maze, there is usually random encounter battle or event and also in the end of maze have a boss battle.
There are two interesting question
 How do we quickly train a shortest path for this maze?</description>
    </item>
    
    <item>
      <title>Game Bot - Fishing</title>
      <link>include2md.github.io.git/posts/side-projects/game-bot-fishing/</link>
      <pubDate>Thu, 01 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/game-bot-fishing/</guid>
      <description>Game Bot - Fishing Many years ago, i try to write a script to play video game automatically (only for testing).
Fishing is a mini game in WoW. This basic rule of this Fishing game is that player throw fishing rod(random position). And then player should wait the bait splash water (random time and no fix pattern for splash water because 3d) to quickly find the bait and click them at right time.</description>
    </item>
    
    <item>
      <title>3D Navigation System</title>
      <link>include2md.github.io.git/posts/side-projects/ikidowi/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 +0000</pubDate>
      
      <guid>include2md.github.io.git/posts/side-projects/ikidowi/</guid>
      <description>3D Navigation System This is my independent study project when i am a collage student.
At that time we build editor and let admin user can quickly build a scene with basic node info, such as building description, building node position and path graph.  Editor - complex path and node    Editor - debug shortest path   And also display visual scene to client. client can navigate the scene like playing video game.</description>
    </item>
    
  </channel>
</rss>
